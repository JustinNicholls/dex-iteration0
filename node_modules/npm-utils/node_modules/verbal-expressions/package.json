{
  "name": "verbal-expressions",
  "description": "JavaScript Regular expressions made easy",
  "version": "0.1.2",
  "keywords": [
    "regular expressions",
    "regex"
  ],
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-qunit": "~0.2.2"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/VerbalExpressions/JSVerbalExpressions.git"
  },
  "bugs": {
    "url": "https://github.com/VerbalExpressions/JSVerbalExpressions/issues"
  },
  "main": "VerbalExpressions.js",
  "license": "MIT",
  "engines": {
    "node": ">= 0.8.0"
  },
  "readme": "VerbalExpressions v0.1.2\r\n=====================\r\n\r\n## JavaScript Regular Expressions made easy\r\nVerbalExpressions is a JavaScript library that helps to construct difficult regular expressions.\r\n\r\n## Other Implementations\r\nYou can see an up to date list of all ports on [VerbalExpressions.github.io](http://VerbalExpressions.github.io).  \r\n- [Ruby](https://github.com/ryan-endacott/verbal_expressions)\r\n- [C#](https://github.com/VerbalExpressions/CSharpVerbalExpressions)\r\n- [Python](https://github.com/VerbalExpressions/PythonVerbalExpressions)\r\n- [Java](https://github.com/VerbalExpressions/JavaVerbalExpressions)\r\n- [Groovy](https://github.com/VerbalExpressions/GroovyVerbalExpressions)\r\n- [PHP](https://github.com/VerbalExpressions/PHPVerbalExpressions)\r\n- [Haskell](https://github.com/VerbalExpressions/HaskellVerbalExpressions)\r\n- [C++](https://github.com/VerbalExpressions/CppVerbalExpressions)\r\n- [Objective-C](https://github.com/VerbalExpressions/ObjectiveCVerbalExpressions)\r\n\r\nIf you would like to contribute another port (which would be awesome!), please open an issue specifying the language.  A repo in the [VerbalExpressions organization](https://github.com/VerbalExpressions) will be created for it.  Please don't open PRs for other languages against this repo.\r\n\r\n## How to get started\r\n### In the browser\r\n```HTML\r\n<script type=\"text/javascript\" src=\"VerbalExpressions.js\"></script>\r\n```\r\n### On the server (node.js)\r\nInstall:\r\n```\r\nnpm install verbal-expressions\r\n```\r\nRequire:\r\n```javascript\r\nvar VerEx = require(\"verbal-expressions\");\r\n```\r\n\r\n## Running tests\r\n\r\n    $ grunt \r\n    (or)\r\n    $ grunt test\r\n\r\n## Examples\r\n\r\nHere's a couple of simple examples to give an idea of how VerbalExpressions works:\r\n\r\n### Testing if we have a valid URL\r\n\r\n```javascript\r\n// Create an example of how to test for correctly formed URLs\r\nvar tester = VerEx()\r\n            .startOfLine()\r\n            .then( \"http\" )\r\n            .maybe( \"s\" )\r\n            .then( \"://\" )\r\n            .maybe( \"www.\" )\r\n            .anythingBut( \" \" )\r\n            .endOfLine();\r\n\r\n// Create an example URL\r\nvar testMe = \"https://www.google.com\";\r\n\r\n// Use RegExp object's native test() function\r\nif( tester.test( testMe ) ) alert( \"We have a correct URL \"); // This output will fire\r\nelse alert( \"The URL is incorrect\" );\r\n\r\nconsole.log( tester ); // Ouputs the actual expression used: /^(http)(s)?(\\:\\/\\/)(www\\.)?([^\\ ]*)$/ \r\n```\r\n\r\n### Replacing strings\r\n\r\n```javascript\r\n// Create a test string\r\nvar replaceMe = \"Replace bird with a duck\";\r\n\r\n// Create an expression that seeks for word \"bird\"\r\nvar expression = VerEx().find( \"bird\" );\r\n\r\n// Execute the expression like a normal RegExp object\r\nvar result = expression.replace( replaceMe, \"duck\" );\r\n\r\nalert( result ); // Outputs \"Replace duck with a duck\"\r\n```\r\n\r\n### Shorthand for string replace:\r\n\r\n```javascript\r\nvar result = VerEx().find( \"red\" ).replace( \"We have a red house\", \"blue\" );\r\nalert( result ); // Outputs \"We have a blue house\"\r\n```\r\n\r\n## API documentation\r\n\r\nYou can find the API documentation at the [wiki pages](https://github.com/jehna/VerbalExpressions/wiki).\r\n\r\n## A little word for a big help\r\nI'd like to promote a special thank-you to [Ben Nadel][ben-nadel] for his [great article about extending native JS objects][extending]\r\n\r\n## Contributions\r\nClone the repo and fork:\r\n`git clone https://github.com/jehna/VerbalExpressions.git`.\r\n\r\nPull requests are warmly welcome!\r\n\r\nCheck out these slide decks for handy Github & git tips:\r\n[Git and Github Secrets](http://zachholman.com/talk/git-github-secrets/)\r\n[More Git and Github Secrets](http://zachholman.com/talk/more-git-and-github-secrets/)\r\n\r\n[ben-nadel]:http://www.bennadel.com/\r\n[extending]:http://www.bennadel.com/blog/2292-Extending-JavaScript-Arrays-While-Keeping-Native-Bracket-Notation-Functionality.htm\r\n",
  "readmeFilename": "README.md",
  "_id": "verbal-expressions@0.1.2",
  "dist": {
    "shasum": "819d241383a9edee02aa64d12a1cb1f5760d2690"
  },
  "_from": "verbal-expressions@0.1.2",
  "_resolved": "https://registry.npmjs.org/verbal-expressions/-/verbal-expressions-0.1.2.tgz"
}
